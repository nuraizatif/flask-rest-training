openapi: 3.0.0
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/rimantoro/REST_Training/1.0.0
info:
  description: Sample for REST API training
  version: "1.0.0"
  title: REST Training
  contact:
    email: iman@sepulsa.com
paths:
  /clients:
    get:
      tags:
        - client
      summary: get all clients
      operationId: adminGetAllClient
      description: |
        Get all registered client
      responses:
        '200':
          description: successfully get all data
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClientItem'
                example:
                  - client_id: 1
                    client_key: "CLIENT01"
                    client_secret: "SECRET01"
                    status: true
                  - client_id: 2
                    client_key: "CLIENT02"
                    client_secret: "SECRET02"
                    status: true
                  - client_id: 3
                    client_key: "CLIENT03"
                    client_secret: "SECRET03"
                    status: false
        '400':
          description: bad input parameter
  /client:  
    post:
      tags:
        - client
      summary: add new client
      operationId: addNewClient
      description: Add new one client data
      responses:
        '201':
          description: item created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientItem'
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      requestBody:
        $ref: '#/components/requestBodies/ClientNewUpdate'
  /client/{id}:
    get:
      tags:
        - client
      summary: get client by id
      operationId: adminGetClientById
      description: |
        Get client by id
      parameters:
        - name: id
          in: path
          description: Client ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Found client id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientItem'
        '400':
          description: 'bad input parameter'
        '404':
          description: 'item not found'
    put:
      tags:
        - client
      summary: get client by id
      operationId: adminUpdateClientById
      description: |
        Get client by id
      parameters:
        - name: id
          in: path
          description: Client ID
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/ClientNewUpdate'
      responses:
        '200':
          description: Successfully save client data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientItem'
        '400':
          description: bad input parameter
    delete:
      tags:
        - client
      summary: delete a client by id
      operationId: deleteClient
      description: Delete one client data by its id
      parameters:
        - name: id
          in: path
          description: Client ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: item deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "success"
        '404':
          description: 'item not found'
        '400':
          description: 'invalid input, object invalid'
components:
  schemas:
    ClientItem:
      type: object
      required:
        - client_id
        - client_key
        - client_secret
      properties:
        client_id:
          type: integer
          example: 1
        client_key:
          type: string
          example: "CLIENT01"
        client_secret:
          type: string
          example: "SECRET01"
        status:
          type: boolean
          example: true
      example:
        client_id: 1
        client_key: "CLIENT01"
        client_secret: "SECRET01"
        status: true
    Manufacturer:
      required:
        - name
      properties:
        name:
          type: string
          example: ACME Corporation
        homePage:
          type: string
          format: url
          example: 'https://www.acme-corp.com'
        phone:
          type: string
          example: 408-867-5309
      type: object
  requestBodies:
    ClientNewUpdate:
      content:
        application/json:
          schema:
            type: object
            required:
              - client_key
              - client_secret
            properties:
              client_key:
                type: string
                example: "CLIENT01"
              client_secret:
                type: string
                example: "SECRET01"
              status:
                type: boolean
                example: true
            example:
              client_key: "CLIENT01"
              client_secret: "SECRET01"
              status: true